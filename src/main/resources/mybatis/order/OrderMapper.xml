<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.htouhui.loan.large.order.mapper.OrderMapper.xml">
  <resultMap id="BaseResultMap" type="com.htouhui.loan.large.order.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="request_amount" jdbcType="DECIMAL" property="requestAmount" />
    <result column="request_period" jdbcType="INTEGER" property="requestPeriod" />
    <result column="request_period_unit" jdbcType="INTEGER" property="requestPeriodUnit" />
    <result column="request_no" jdbcType="INTEGER" property="requestNo" />
    <result column="request_rate" jdbcType="DECIMAL" property="requestRate" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="period_unit" jdbcType="INTEGER" property="periodUnit" />
    <result column="no" jdbcType="INTEGER" property="no" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="loan_date" jdbcType="TIMESTAMP" property="loanDate" />
    <result column="due" jdbcType="TINYINT" property="due" />
    <result column="is_reloan" jdbcType="INTEGER" property="isReloan" />
    <result column="repayment_no" jdbcType="INTEGER" property="repaymentNo" />
    <result column="clerk" jdbcType="VARCHAR" property="clerk" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, request_amount, request_period, request_period_unit, request_no, request_rate, 
    amount, period, period_unit, no, rate, status, loan_date, due, is_reloan, repayment_no, 
    clerk, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.htouhui.loan.large.order.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from loan_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loan_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from loan_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.htouhui.loan.large.order.OrderExample">
    delete from loan_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.htouhui.loan.large.order.Order">
    insert into loan_order (id, user_id, request_amount, 
      request_period, request_period_unit, request_no, 
      request_rate, amount, period, 
      period_unit, no, rate, 
      status, loan_date, due, 
      is_reloan, repayment_no, clerk, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{requestAmount,jdbcType=DECIMAL}, 
      #{requestPeriod,jdbcType=INTEGER}, #{requestPeriodUnit,jdbcType=INTEGER}, #{requestNo,jdbcType=INTEGER}, 
      #{requestRate,jdbcType=DECIMAL}, #{amount,jdbcType=DECIMAL}, #{period,jdbcType=INTEGER}, 
      #{periodUnit,jdbcType=INTEGER}, #{no,jdbcType=INTEGER}, #{rate,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER}, #{loanDate,jdbcType=TIMESTAMP}, #{due,jdbcType=TINYINT}, 
      #{isReloan,jdbcType=INTEGER}, #{repaymentNo,jdbcType=INTEGER}, #{clerk,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.htouhui.loan.large.order.Order">
    insert into loan_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="requestAmount != null">
        request_amount,
      </if>
      <if test="requestPeriod != null">
        request_period,
      </if>
      <if test="requestPeriodUnit != null">
        request_period_unit,
      </if>
      <if test="requestNo != null">
        request_no,
      </if>
      <if test="requestRate != null">
        request_rate,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="periodUnit != null">
        period_unit,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="loanDate != null">
        loan_date,
      </if>
      <if test="due != null">
        due,
      </if>
      <if test="isReloan != null">
        is_reloan,
      </if>
      <if test="repaymentNo != null">
        repayment_no,
      </if>
      <if test="clerk != null">
        clerk,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="requestAmount != null">
        #{requestAmount,jdbcType=DECIMAL},
      </if>
      <if test="requestPeriod != null">
        #{requestPeriod,jdbcType=INTEGER},
      </if>
      <if test="requestPeriodUnit != null">
        #{requestPeriodUnit,jdbcType=INTEGER},
      </if>
      <if test="requestNo != null">
        #{requestNo,jdbcType=INTEGER},
      </if>
      <if test="requestRate != null">
        #{requestRate,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="periodUnit != null">
        #{periodUnit,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="loanDate != null">
        #{loanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="due != null">
        #{due,jdbcType=TINYINT},
      </if>
      <if test="isReloan != null">
        #{isReloan,jdbcType=INTEGER},
      </if>
      <if test="repaymentNo != null">
        #{repaymentNo,jdbcType=INTEGER},
      </if>
      <if test="clerk != null">
        #{clerk,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.htouhui.loan.large.order.OrderExample" resultType="java.lang.Long">
    select count(*) from loan_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update loan_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.requestAmount != null">
        request_amount = #{record.requestAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.requestPeriod != null">
        request_period = #{record.requestPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.requestPeriodUnit != null">
        request_period_unit = #{record.requestPeriodUnit,jdbcType=INTEGER},
      </if>
      <if test="record.requestNo != null">
        request_no = #{record.requestNo,jdbcType=INTEGER},
      </if>
      <if test="record.requestRate != null">
        request_rate = #{record.requestRate,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.periodUnit != null">
        period_unit = #{record.periodUnit,jdbcType=INTEGER},
      </if>
      <if test="record.no != null">
        no = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.loanDate != null">
        loan_date = #{record.loanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.due != null">
        due = #{record.due,jdbcType=TINYINT},
      </if>
      <if test="record.isReloan != null">
        is_reloan = #{record.isReloan,jdbcType=INTEGER},
      </if>
      <if test="record.repaymentNo != null">
        repayment_no = #{record.repaymentNo,jdbcType=INTEGER},
      </if>
      <if test="record.clerk != null">
        clerk = #{record.clerk,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update loan_order
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      request_amount = #{record.requestAmount,jdbcType=DECIMAL},
      request_period = #{record.requestPeriod,jdbcType=INTEGER},
      request_period_unit = #{record.requestPeriodUnit,jdbcType=INTEGER},
      request_no = #{record.requestNo,jdbcType=INTEGER},
      request_rate = #{record.requestRate,jdbcType=DECIMAL},
      amount = #{record.amount,jdbcType=DECIMAL},
      period = #{record.period,jdbcType=INTEGER},
      period_unit = #{record.periodUnit,jdbcType=INTEGER},
      no = #{record.no,jdbcType=INTEGER},
      rate = #{record.rate,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      loan_date = #{record.loanDate,jdbcType=TIMESTAMP},
      due = #{record.due,jdbcType=TINYINT},
      is_reloan = #{record.isReloan,jdbcType=INTEGER},
      repayment_no = #{record.repaymentNo,jdbcType=INTEGER},
      clerk = #{record.clerk,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.htouhui.loan.large.order.Order">
    update loan_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="requestAmount != null">
        request_amount = #{requestAmount,jdbcType=DECIMAL},
      </if>
      <if test="requestPeriod != null">
        request_period = #{requestPeriod,jdbcType=INTEGER},
      </if>
      <if test="requestPeriodUnit != null">
        request_period_unit = #{requestPeriodUnit,jdbcType=INTEGER},
      </if>
      <if test="requestNo != null">
        request_no = #{requestNo,jdbcType=INTEGER},
      </if>
      <if test="requestRate != null">
        request_rate = #{requestRate,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="periodUnit != null">
        period_unit = #{periodUnit,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="loanDate != null">
        loan_date = #{loanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="due != null">
        due = #{due,jdbcType=TINYINT},
      </if>
      <if test="isReloan != null">
        is_reloan = #{isReloan,jdbcType=INTEGER},
      </if>
      <if test="repaymentNo != null">
        repayment_no = #{repaymentNo,jdbcType=INTEGER},
      </if>
      <if test="clerk != null">
        clerk = #{clerk,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.htouhui.loan.large.order.Order">
    update loan_order
    set user_id = #{userId,jdbcType=BIGINT},
      request_amount = #{requestAmount,jdbcType=DECIMAL},
      request_period = #{requestPeriod,jdbcType=INTEGER},
      request_period_unit = #{requestPeriodUnit,jdbcType=INTEGER},
      request_no = #{requestNo,jdbcType=INTEGER},
      request_rate = #{requestRate,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      period = #{period,jdbcType=INTEGER},
      period_unit = #{periodUnit,jdbcType=INTEGER},
      no = #{no,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      loan_date = #{loanDate,jdbcType=TIMESTAMP},
      due = #{due,jdbcType=TINYINT},
      is_reloan = #{isReloan,jdbcType=INTEGER},
      repayment_no = #{repaymentNo,jdbcType=INTEGER},
      clerk = #{clerk,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.htouhui.loan.large.order.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="request_amount" jdbcType="DECIMAL" property="requestAmount" />
    <result column="request_period" jdbcType="INTEGER" property="requestPeriod" />
    <result column="request_no" jdbcType="INTEGER" property="requestNo" />
    <result column="request_rate" jdbcType="DECIMAL" property="requestRate" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="no" jdbcType="INTEGER" property="no" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="loan_date" jdbcType="TIMESTAMP" property="loanDate" />
    <result column="due" jdbcType="TINYINT" property="due" />
    <result column="is_reloan" jdbcType="INTEGER" property="isReloan" />
    <result column="repayment_no" jdbcType="INTEGER" property="repaymentNo" />
    <result column="clerk" jdbcType="VARCHAR" property="clerk" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, request_amount, request_period, request_no, request_rate, amount, period, 
    no, rate, status, loan_date, due, is_reloan, repayment_no, clerk, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.htouhui.loan.large.order.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from loan_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loan_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from loan_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.htouhui.loan.large.order.OrderExample">
    delete from loan_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.htouhui.loan.large.order.Order">
    insert into loan_order (id, user_id, request_amount, 
      request_period, request_no, request_rate, 
      amount, period, no, 
      rate, status, loan_date, 
      due, is_reloan, repayment_no, 
      clerk, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{requestAmount,jdbcType=DECIMAL}, 
      #{requestPeriod,jdbcType=INTEGER}, #{requestNo,jdbcType=INTEGER}, #{requestRate,jdbcType=DECIMAL}, 
      #{amount,jdbcType=DECIMAL}, #{period,jdbcType=INTEGER}, #{no,jdbcType=INTEGER}, 
      #{rate,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{loanDate,jdbcType=TIMESTAMP}, 
      #{due,jdbcType=TINYINT}, #{isReloan,jdbcType=INTEGER}, #{repaymentNo,jdbcType=INTEGER}, 
      #{clerk,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.htouhui.loan.large.order.Order">
    insert into loan_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="requestAmount != null">
        request_amount,
      </if>
      <if test="requestPeriod != null">
        request_period,
      </if>
      <if test="requestNo != null">
        request_no,
      </if>
      <if test="requestRate != null">
        request_rate,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="loanDate != null">
        loan_date,
      </if>
      <if test="due != null">
        due,
      </if>
      <if test="isReloan != null">
        is_reloan,
      </if>
      <if test="repaymentNo != null">
        repayment_no,
      </if>
      <if test="clerk != null">
        clerk,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="requestAmount != null">
        #{requestAmount,jdbcType=DECIMAL},
      </if>
      <if test="requestPeriod != null">
        #{requestPeriod,jdbcType=INTEGER},
      </if>
      <if test="requestNo != null">
        #{requestNo,jdbcType=INTEGER},
      </if>
      <if test="requestRate != null">
        #{requestRate,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="loanDate != null">
        #{loanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="due != null">
        #{due,jdbcType=TINYINT},
      </if>
      <if test="isReloan != null">
        #{isReloan,jdbcType=INTEGER},
      </if>
      <if test="repaymentNo != null">
        #{repaymentNo,jdbcType=INTEGER},
      </if>
      <if test="clerk != null">
        #{clerk,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.htouhui.loan.large.order.OrderExample" resultType="java.lang.Long">
    select count(*) from loan_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update loan_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.requestAmount != null">
        request_amount = #{record.requestAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.requestPeriod != null">
        request_period = #{record.requestPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.requestNo != null">
        request_no = #{record.requestNo,jdbcType=INTEGER},
      </if>
      <if test="record.requestRate != null">
        request_rate = #{record.requestRate,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.no != null">
        no = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.loanDate != null">
        loan_date = #{record.loanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.due != null">
        due = #{record.due,jdbcType=TINYINT},
      </if>
      <if test="record.isReloan != null">
        is_reloan = #{record.isReloan,jdbcType=INTEGER},
      </if>
      <if test="record.repaymentNo != null">
        repayment_no = #{record.repaymentNo,jdbcType=INTEGER},
      </if>
      <if test="record.clerk != null">
        clerk = #{record.clerk,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update loan_order
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      request_amount = #{record.requestAmount,jdbcType=DECIMAL},
      request_period = #{record.requestPeriod,jdbcType=INTEGER},
      request_no = #{record.requestNo,jdbcType=INTEGER},
      request_rate = #{record.requestRate,jdbcType=DECIMAL},
      amount = #{record.amount,jdbcType=DECIMAL},
      period = #{record.period,jdbcType=INTEGER},
      no = #{record.no,jdbcType=INTEGER},
      rate = #{record.rate,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      loan_date = #{record.loanDate,jdbcType=TIMESTAMP},
      due = #{record.due,jdbcType=TINYINT},
      is_reloan = #{record.isReloan,jdbcType=INTEGER},
      repayment_no = #{record.repaymentNo,jdbcType=INTEGER},
      clerk = #{record.clerk,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.htouhui.loan.large.order.Order">
    update loan_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="requestAmount != null">
        request_amount = #{requestAmount,jdbcType=DECIMAL},
      </if>
      <if test="requestPeriod != null">
        request_period = #{requestPeriod,jdbcType=INTEGER},
      </if>
      <if test="requestNo != null">
        request_no = #{requestNo,jdbcType=INTEGER},
      </if>
      <if test="requestRate != null">
        request_rate = #{requestRate,jdbcType=DECIMAL},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="loanDate != null">
        loan_date = #{loanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="due != null">
        due = #{due,jdbcType=TINYINT},
      </if>
      <if test="isReloan != null">
        is_reloan = #{isReloan,jdbcType=INTEGER},
      </if>
      <if test="repaymentNo != null">
        repayment_no = #{repaymentNo,jdbcType=INTEGER},
      </if>
      <if test="clerk != null">
        clerk = #{clerk,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.htouhui.loan.large.order.Order">
    update loan_order
    set user_id = #{userId,jdbcType=BIGINT},
      request_amount = #{requestAmount,jdbcType=DECIMAL},
      request_period = #{requestPeriod,jdbcType=INTEGER},
      request_no = #{requestNo,jdbcType=INTEGER},
      request_rate = #{requestRate,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      period = #{period,jdbcType=INTEGER},
      no = #{no,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      loan_date = #{loanDate,jdbcType=TIMESTAMP},
      due = #{due,jdbcType=TINYINT},
      is_reloan = #{isReloan,jdbcType=INTEGER},
      repayment_no = #{repaymentNo,jdbcType=INTEGER},
      clerk = #{clerk,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>